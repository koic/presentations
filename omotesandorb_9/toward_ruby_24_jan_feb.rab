= Let's get ready for next Ruby

: content-source
   表参道.rb#9
: place
   株式会社マネーフォワードさま
: date
   2016-03-03(Thu)
: author
   伊藤 浩一 (@koic)
: institution
   (株)永和システムマネジメント
: allotted-time
   5m
: theme
   lightning-clear-blue

= ((' '))

  # image
  # src = images/profile.jpg
  # relative_height = 100

= 宣伝

= Idobata のオンプレ版 提供をはじめました

  # image
  # src = images/idobata.png
  # relative_height = 100

= サービスの提供ではなく、ソースコード使用許諾権の販売という形態になります。具体的には、GitHubのIdobataリポジトリのコラボレータになる権利を販売します。

= ((*GitHubのIdobataリポジトリのコラボレータになる権利*))

#= 使用許諾料 : 年間1,200千円 (消費税別)

= ((' '))

  # image
  # src = images/hrysd.png
  # relative_height = 90

= ((' '))

  # image
  # src = images/esminc.png
  # relative_height = 115

= 今日の話

  * Ruby 2.3.0 リリース後の開発者会議のログ (2回分) をざっくり読んでみた一部の紹介と感想
  * つまり二次情報です
  * 情報はナマモノなので、明日は違う話になっているかも
    * 有為転変は世の習い

= 『ソース読め』という格言

私の関心事なんかでフィルタリングされているので、開発者会議のログや ISSUE を読みましょう！

= ソースという名のまとめ

 * 2016年1月の開発者会議ログ
   * https://bugs.ruby-lang.org/projects/ruby/wiki/DevelopersMeeting20160118Japan
 * 2016年2月の開発者会議ログ
   * https://bugs.ruby-lang.org/projects/ruby/wiki/DevelopersMeeting20160216Japan

= 開発者会議ログを読むときの姿勢

  # blockquote
  # title = 開発者会議より
  Dev meeting IS NOT a decision making place. All decisions should be done at the bug tracker.

= 実装ダイジェスト

  * Ruby の trunk に書かれている NEWS は手早い情報収集
    * https://github.com/ruby/ruby/blob/trunk/NEWS

#= 2016-01-18のログより
= January

= Ruby 2.3 のふりかえり

  * K: 2.2との((*高い*))互換性と新機能
    * 大きなソフトウェアですごい
    * Railsアプリ開発者としてはライヴラリなど互換がなくなるケースもあるのでアプリのテストをやるといい
      *  http://qiita.com/koic/items/c0dd77ff853de72c1597
  * P: preview 1 のリリース時期
    * T: 次回のリリースアナウンス

= Ruby 2.4 のリリース計画

  * 6/8: Call for feature proposal
  * 9/8 (RubyKaigi): Prev 1
  * 11/10 (RubyConf): Prev 2
  * 12/XX: Release Candidate, feature freezed
  * 12/25: Final Release

= そもそも 3.0 ではない？

  * 以下を含むと 3.0 にする方針っぽい
    * concurrency
    * type check
    * performance (3倍速くの話かな?)
  * https://gist.github.com/nurse/4324519 は副本

= Toward 2.4?

= Remove Fixnum and Bignum

  # blockquote
  # title = 開発者会議より
  Matz: Try it on 2.4

= 1 / 2 is Rational

  * #5512 の Integer#/ を Integer#quo の別名として定義しなおす提案がはじまり (?)
  * いまから変えるのは難しいねえという雰囲気

= 0.1 is Rational

  * "0.1 を浮動小数点数リテラルでは無く、有理数リテラルにする。" というもの
  * 私が理解不足で http://www.slideshare.net/mrkn/float-is-legacy から読み直したい

= February
#= 2016-02-16のログより

#= MatchData#named_captures [Feature #11999]
= MatchData#to_h

#名前付きキャプチャを元に Hash を得られる。issues/11999の素案
issues/11999の素案から抜粋。

  # coderay ruby
  class MatchData
    def to_h
      self.names.map {|n| [n, self[n]] }.to_h
    end
  end

  p '12'.match(/(?<a>.)(?<b>.)(?<c>.)?/).to_h
  #=> {"a"=>"1", "b"=>"2", "c"=>nil}

= 名前付きキャプチャおさらい

#(?<name>pat)もしくは(?'name'pat)と記述します。... MatchData#[] に Symbol を渡すことで参照できます
(?<name>pat)か(?'name'pat)と記述したマッチデータは MatchData#[] に Symbol を渡すことで参照できます

  # coderay ruby

  m = /\$(?<dollars>\d+)\.(?<cents>\d+)/.match("$3.67")
  # => #<MatchData "$3.67" dollars:"3" cents:"67">
  m[:dollars] # => "3"
  m[:cents] # => "67"

= 現状の 2.4.0-dev

MatchData#named_captures として実装されている

  # coderay ruby
  p '12'.match(/(?<a>.)(?<b>.)(?<c>.)?/).named_captures
  #=> {"a"=>"1", "b"=>"2", "c"=>nil}

= Numeric#step の型エラー

以下を実行した場合

  # coderay ruby
  1.1.step(5.1, "1") {}

 * Ruby 2.3.0 は ArgumentError
 * Ruby 2.4.0dev は TypeError

= Dir.empty?

ふつうにべんりでは。

  # coderay ruby
  Dir.empty?('empty/dir')
  # => true

すでにruby 2.4.0devに入ってる。

= some container#nonempty?

まだ決まっていない雰囲気

  # blockquote
  nobu: you can write `ary&.empty?.!`.

  mrkn: How about `ary.include_something?` ?

私は`Object#!`の発想に感銘

= Add String.buffer

文字列生成時に必要な大きさのキャパシティを予め指定することができる。

  # coderay ruby
  String.new(capacity: 100000)

すでにruby 2.4.0devに入ってる。

= おわりに

取りあげることができたのは一部なので、詳しく知りたい方は開発者会議ログとリンク先の ISSUE を読みましょう！

= March 2016

  * 次回の開発者会議は 2016年3月16日とのことです
    * ソースは開発者会議ログ
